buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'RabbitJsonRPCServer'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

ext {
    rabbitMQVersion = "3.4.1"

    jsonRPCVersion = "1.35"

    jacksonVersion = "2.6.0"

    jodaVersion = "2.8.1"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-data-rest")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    //RabbitMQ
    compile("com.rabbitmq:amqp-client:${rabbitMQVersion}")

    //JSONRPC
    compile("com.thetransactioncompany:jsonrpc2-base:${jsonRPCVersion}")

    //Inject
    compile("javax.inject:javax.inject:1")

    //Jackson
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}")

    //Joda
    compile("joda-time:joda-time:${jodaVersion}")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
